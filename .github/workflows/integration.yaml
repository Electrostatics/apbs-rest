name: Service Integration
on: 
  push:
    paths:
      - '.github/workflows/integration.yaml'
      - 'utilities/wait_for_deployments.py'
      - 'tests/integration/**'
      - 'tests/requirements.txt'
      - 'src/**'
      - 'charts/**'

jobs:
  job1:
    name: Install Dependencies and Run Integration Tests
    runs-on: ubuntu-latest
    steps:
    - name: Git checkout APBS-REST codebase
      uses: actions/checkout@v2

    - name: Install Minikube
      run: |
        # curl -Lo minikube https://storage.googleapis.com/minikube/releases/v1.9.2/minikube-linux-amd64
        curl -Lo minikube https://storage.googleapis.com/minikube/releases/v1.15.1/minikube-linux-amd64
        chmod +x minikube
        sudo mkdir -p /usr/local/bin/
        sudo install minikube /usr/local/bin/

    - name: Verify Minikube Installation and Start Cluster
      run: |
        which minikube
        minikube start --kubernetes-version='v1.15.1' --driver=docker
        minikube status
        minikube addons enable ingress

    # - name: Download Helm v3
    #   run: |
    #     wget https://get.helm.sh/helm-v3.0.0-linux-amd64.tar.gz
    #     gunzip helm-v3.0.0-linux-amd64.tar.gz
    #     tar -xvf helm-v3.0.0-linux-amd64.tar
    #     mv linux-amd64/ helm-v3

    - name: Verify Helm Installation
      run: |
        which helm
        helm version

    - name: Install APBS-REST via Helm
      run: |
        # helm install apbs-rest charts/apbs-rest --set ingress.enabled=true,ingress.hosts[0]=apbs.$(minikube ip).nip.io
        helm install apbs-rest charts/apbs-rest --set ingress.enabled=true,ingress.hosts[0]=apbs-testing.action

    - name: Wait for deployments
      run: |
        # Checks 20 times, in 30-second intervals (hence '30 20')
        python3 utilities/wait_for_deployments.py 30 20

    - name: Describe pods within Installation
      run: |
        kubectl get pods
        kubectl get pods --no-headers=true | awk '/apbs-rest/{print $1}' | xargs kubectl describe pod

    - name: Add custom Minikube host entry to /etc/hosts
      run: |
        echo "$(minikube ip)  apbs-testing.action" | sudo tee -a /etc/hosts
        sudo cat /etc/hosts
        curl -s -D - -o /dev/null apbs-testing.action

    - name: Install PyTest and other Python dependencies
      working-directory: ./tests
      run: |
        python3 -m pip install --upgrade pip
        sudo apt install python3-venv
        python3 -m venv venv
        source venv/bin/activate
        which pip
        pip install -r requirements.txt

    - name: Run tests
      working-directory: ./tests/integration
      run: |
        source ../venv/bin/activate
        # APBS_HOST=apbs.$(minikube ip).nip.io pytest -n 3
        APBS_HOST=apbs-testing.action pytest -n 3
        
    - name: Describe job pods upon PyTest failure
      if: ${{ failure() }}
      run: |
        kubectl get pods

        printf "\nDownloader Log \n"
        kubectl get pods --no-headers=true | awk '/task-(.*)-(apbs|pdb)/{print $1}' | xargs kubectl logs -c apbs-rest-downloader 
        
        printf "\nExecution  Log \n"
        kubectl get pods --no-headers=true | awk '/task-(.*)-(apbs|pdb)/{print $1}' | xargs kubectl logs -c apbs-executor
        
        printf "\nUploader Log \n"
        kubectl get pods --no-headers=true | awk '/task-(.*)-(apbs|pdb)/{print $1}' | xargs kubectl logs -c apbs-rest-downloader

        printf "\nPod Description \n"
        kubectl get pods --no-headers=true | awk '/task-(.*)-(apbs|pdb)/{print $1}' | xargs kubectl describe pod
